version: '3.8'

services:

  mysql:
    image: mysql:latest
    volumes:
      - mysql:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db_1
      MYSQL_USER: user
      MYSQL_PASSWORD: user1234
      MYSQL_TCP_PORT: 3307
    ports:
      - '3307:3307'
    expose:
      - 3307
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
    networks:
      - km-flask

  mysql-test:
    image: mysql:latest
    volumes:
      - mysql-test:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db_1
      MYSQL_USER: user
      MYSQL_PASSWORD: user1234
      MYSQL_TCP_PORT: 3308
    ports:
      - '3308:3308'
    expose:
      - 3308
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
    networks:
      - km-flask

  api-gateway-webapp:
    build:
      context: ./api_gateway
      dockerfile: Dockerfile
    container_name: api-gateway-webapp
    command: gunicorn --bind 0.0.0.0:8000 --workers 1 'main:create_app()' --reload
    volumes:
      - ./api_gateway:/webapp
    depends_on:
      - parcel_lockers-webapp
      - users-webapp
    ports:
      - "8000:8000"
    networks:
      km-flask:
        aliases:
          - flask-app

  parcel_lockers-webapp:
    restart: always
    build:
      context: ./parcel_lockers
      dockerfile: Dockerfile
    container_name: parcel_lockers-webapp
    command: gunicorn --bind 0.0.0.0:8100 --workers 1 'main:create_app()' --reload
    volumes:
      - ./parcel_lockers:/webapp
    depends_on:
      mysql:
        condition: service_healthy
      mysql-test:
        condition: service_healthy
    ports:
      - "8100:8100"
    networks:
      km-flask:
        aliases:
          - flask-app

  users-webapp:
    build:
      context: ./users
      dockerfile: Dockerfile
    container_name: users-webapp
    command: gunicorn --bind 0.0.0.0:8200 --workers 1 'main:create_app()' --reload
    volumes:
      - ./users:/webapp
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8200:8200"
    networks:
      km-flask:
        aliases:
          - flask-app

  api-gateway-nginx:
    image: nginx:latest
    volumes:
      - ./api_gateway/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - '80:80'
    depends_on:
      - api-gateway-webapp
    networks:
      - km-flask

  parcel-lockers-nginx:
    image: nginx:latest
    volumes:
      - ./parcel_lockers/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - '81:81'
    depends_on:
      - parcel_lockers-webapp
    networks:
      - km-flask

  users-nginx:
    image: nginx:latest
    volumes:
      - ./users/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - '82:82'
    depends_on:
      - users-webapp
    networks:
      - km-flask



volumes:
  mysql:
  mysql-users:
  mysql-test:

networks:
  km-flask:
